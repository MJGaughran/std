menu(serialTMOD) {
	choice(serialTMOD_Write_Read,"Write/Read")
	choice(serialTMOD_Write,"Write")
	choice(serialTMOD_Read,"Read")
}
menu(serialOFMT) {
	choice(serialOFMT_ASCII,"ASCII")
	choice(serialOFMT_Binary,"Binary")
	choice(serialOFMT_Hybrid,"Hybrid")
}
menu(serialBAUD) {
	choice(serialBAUD_300,"300")
	choice(serialBAUD_600,"600")
	choice(serialBAUD_1200,"1200")
	choice(serialBAUD_2400,"2400")
	choice(serialBAUD_4800,"4800")
	choice(serialBAUD_9600,"9600")
	choice(serialBAUD_19200,"19200")
	choice(serialBAUD_38400,"38400")
}
menu(serialPRTY) {
	choice(serialPRTY_None,"None")
	choice(serialPRTY_Even,"Even")
	choice(serialPRTY_Odd,"Odd")
}
menu(serialDBIT) {
	choice(serialDBIT_5,"5")
	choice(serialDBIT_6,"6")
	choice(serialDBIT_7,"7")
	choice(serialDBIT_8,"8")
}
menu(serialSBIT) {
	choice(serialSBIT_1,"1")
	choice(serialSBIT_2,"2")
}
menu(serialFCTL) {
	choice(serialFCTL_None,"None")
	choice(serialFCTL_Hardware,"Hardware")
}
recordtype(serial) {
	include "dbCommon.dbd" 
	field(VAL,DBF_STRING) {
		prompt("Value field (unused)")
		promptgroup(GUI_INPUTS)
		asl(ASL0)
		size(40)
	}
	field(TMOD,DBF_MENU) {
		prompt("Transaction mode")
		promptgroup(GUI_COMMON)
		interest(1)
		menu(serialTMOD)
	}
	field(AOUT,DBF_STRING) {
		prompt("Output (command) string")
		promptgroup(GUI_INPUTS)
		asl(ASL0)
		pp(TRUE)
		size(40)
	}
	field(ODEL,DBF_LONG) {
		prompt("Output delimiter")
		promptgroup(GUI_DISPLAY)
		initial("13")
	}
	field(BOUT,DBF_CHAR) {
		prompt("Output binary data")
		asl(ASL0)
		special(SPC_DBADDR)
		pp(TRUE)
	}
	field(OPTR,DBF_NOACCESS) {
		prompt("Output buffer pointer")
		special(SPC_NOMOD)
		interest(4)
		size(4)
		extra("void *optr")
	}
	field(OMAX,DBF_LONG) {
		prompt("Max. size of output arr")
		promptgroup(GUI_DISPLAY)
		special(SPC_NOMOD)
		interest(1)
		initial("512")
	}
	field(NOWT,DBF_LONG) {
		prompt("Number of bytes to writ")
		promptgroup(GUI_DISPLAY)
		interest(1)
		initial("512")
	}
	field(OFMT,DBF_MENU) {
		prompt("Output format")
		promptgroup(GUI_COMMON)
		interest(1)
		menu(serialOFMT)
	}
	field(AINP,DBF_STRING) {
		prompt("Input (response) string")
		promptgroup(GUI_INPUTS)
		asl(ASL0)
		special(SPC_NOMOD)
		size(40)
	}
	field(IDEL,DBF_LONG) {
		prompt("Input delimiter")
		promptgroup(GUI_DISPLAY)
		initial("13")
	}
	field(BINP,DBF_CHAR) {
		prompt("Input binary data")
		asl(ASL0)
		special(SPC_DBADDR)
	}
	field(IPTR,DBF_NOACCESS) {
		prompt("Input buffer pointer")
		special(SPC_NOMOD)
		interest(4)
		size(4)
		extra("void *iptr")
	}
	field(IMAX,DBF_LONG) {
		prompt("Max. size of input arra")
		promptgroup(GUI_DISPLAY)
		special(SPC_NOMOD)
		interest(1)
		initial("512")
	}
	field(NRRD,DBF_LONG) {
		prompt("Number of bytes to read")
		promptgroup(GUI_DISPLAY)
		interest(1)
	}
	field(NORD,DBF_LONG) {
		prompt("Number of bytes read")
		promptgroup(GUI_DISPLAY)
		special(SPC_NOMOD)
		interest(1)
	}
	field(IFMT,DBF_MENU) {
		prompt("Input format")
		promptgroup(GUI_COMMON)
		interest(1)
		menu(serialOFMT)
	}
	field(INP,DBF_INLINK) {
		prompt("Input Specification")
		promptgroup(GUI_INPUTS)
		special(SPC_NOMOD)
		interest(1)
	}
	field(TMOT,DBF_LONG) {
		prompt("Timeout (msec)")
		promptgroup(GUI_DISPLAY)
		interest(1)
		initial("500")
	}
	field(BAUD,DBF_MENU) {
		prompt("Baud rate")
		promptgroup(GUI_COMMON)
		special(SPC_MOD)
		menu(serialBAUD)
		initial("5")
	}
	field(PRTY,DBF_MENU) {
		prompt("Parity")
		promptgroup(GUI_COMMON)
		special(SPC_MOD)
		menu(serialPRTY)
	}
	field(DBIT,DBF_MENU) {
		prompt("Data bits")
		promptgroup(GUI_COMMON)
		special(SPC_MOD)
		menu(serialDBIT)
		initial("3")
	}
	field(SBIT,DBF_MENU) {
		prompt("Stop bits")
		promptgroup(GUI_COMMON)
		special(SPC_MOD)
		menu(serialSBIT)
	}
	field(FCTL,DBF_MENU) {
		prompt("Flow control")
		promptgroup(GUI_COMMON)
		special(SPC_MOD)
		menu(serialFCTL)
	}
	field(OINP,DBF_STRING) {
		prompt("Previous input string")
		special(SPC_NOMOD)
		interest(3)
		size(40)
	}
	field(ONRD,DBF_LONG) {
		prompt("Previous nord")
		promptgroup(GUI_DISPLAY)
		special(SPC_NOMOD)
		interest(1)
	}
	field(ONWT,DBF_LONG) {
		prompt("Previous nowt")
		promptgroup(GUI_DISPLAY)
		special(SPC_NOMOD)
		interest(1)
	}
}
